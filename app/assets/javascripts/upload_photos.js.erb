$(function () {
  (function () {
    var uploadForm = $('.upload_form');
    var filesUpload = $('.upload_images');
    var fileList = $('.upload_list');
    var addPhotosButton = fileList.find('.add_photos_button');

    var thumbnailQueue = [];
    var thumbnailReady = true;

    var uploadQueue = [];
    var doUpload = false;
    var uploadReady = true;

    var reader = new FileReader();
    var imageObj = new Image();
    var canvas = $('<canvas width="100" height="100" />').get(0);

    var thumbnailWidth = 100;
    var thumbnailHeight = 100;

    uploadForm.submit(function() {
      doUpload = true;

      return false;
    });

    filesUpload.hide();

    addPhotosButton.click(function() {
      filesUpload.trigger('click');
    });

    function queueFiles(files) {
      if (typeof files !== 'undefined') {
        for (var i = 0, l = files.length; i < l; i++) {
          var file = files[i];
          if ((/image/i).test(file.type)) {
            var li = $('<li class="thumb"><div class="image"><img src="<%= asset_path 'default-thumbnail.png' %>" width="' + thumbnailWidth + '" height="' + thumbnailHeight + '" /></div><div class="title">' + file.name + '</div><div class="size">' + getReadableFileSizeString(file.size) + '</div></li>');

            li.insertBefore(fileList.find('.add_photos_button'));

            thumbnailQueue.push({
              'file': file,
              'li': li,
            });

            uploadQueue.push({
              'file': file,
              'li': li
            });
          }
        }
      }
    }

    var queueFilesElement = $('#generate_thumbnails');

    setInterval(function() {
      if (queueFilesElement.is(':checked') && thumbnailReady && thumbnailQueue.length > 0) {
        thumbnailReady = false;
        generateThumbnail(thumbnailQueue.shift());
      }
    }, 1000);

    setInterval(function() {
      if (doUpload && uploadReady && uploadQueue.length > 0) {
        uploadReady = false;
        uploadFile(uploadQueue.shift());
      } else if (uploadQueue.length <= 0) {
        doUpload = false;
      }
    }, 500);

    function generateThumbnail(queueItem) {
      var file = queueItem.file;
      var li = queueItem.li;
      var img = li.find('img');

      if (typeof(reader) !== 'undefined') {
        reader.onload = function(event) {
          imageObj.onload = function() {
            canvas.getContext('2d').drawImage(imageObj, 0, 0, thumbnailWidth, thumbnailHeight);
            img.get(0).src = canvas.toDataURL();

            imageObj.src = '';
            canvas.getContext('2d').clearRect(0, 0, thumbnailWidth, thumbnailHeight);

            thumbnailReady = true;
          };
          imageObj.src = event.target.result;
        };
        reader.readAsDataURL(file);
      }
    }

    function getReadableFileSizeString(fileSizeInBytes) {
      var i = -1;
      var byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];
      do {
        fileSizeInBytes = fileSizeInBytes / 1024;
        i++;
      } while (fileSizeInBytes > 1024);

      return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];
    };

    filesUpload.bind('change', function () {
      queueFiles(this.files);
    });

    fileList.bind({
      dragleave: function (event) {
        var target = event.target;

        if (target && target === fileList) {
          $(this).removeClass('over');
        }
        return false;
      },

      dragenter: function (event) {
        $(this).addClass('over');
        return false;
      },

      dragover: function (event) {
        return false;
      },

      drop: function (event) {
        queueFiles(event.originalEvent.dataTransfer.files);
        $(this).removeClass('over');
        return false;
      }
    });

    function uploadFile(queueItem) {
      var formData = new FormData;
      formData.append(filesUpload.attr('name'), queueItem.file);

      $.ajax(uploadForm.attr('action'), {
        type: 'POST',
        mimeType: 'multipart/form-data',
        contentType: false,
        data: formData,
        processData: false,
        progress: function(jqXHR, progressEvent) {
          console.log(progressEvent);
          if (progressEvent.lengthComputable) {
            console.log("Loaded " + (Math.round(progressEvent.loaded / progressEvent.total * 100)) + "%");
          } else {
            console.log("Loading...");
          }
        },
        error: function() {
          queueItem.li.addClass('error');
        },
        success: function() {
          queueItem.li.addClass('uploaded');
        },
        complete: function() {
          uploadReady = true;
        }
      });
    }
  })();
});

